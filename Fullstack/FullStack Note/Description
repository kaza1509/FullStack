---------------------- Mục Lục -----------------------
Buổi 1: Khai giảng
Buổi 2: HTML
Buổi 3: CSS
Buổi 4: Năm thuộc tính quan trọng nhất của css
Buổi 5: Float
Buổi 6: Chữa bài tập: làm 1 layout trang web mà ban thích (Mình làm trang fap.fpt.edu.vn/shopee)
Buổi 7: flex-box
Buổi 9: position/background
Buổi 10: State(hover, pseudo, active....)
Buổi 11: Các thuộc tính css
Buổi 12: Thiết kế các mẫu bằng html/css
Buổi 13: Hình ảnh trên trang web

------------------------------------------------------

Buổi 1: Khai giảng

- Tại sao lại học livestream
	+ Cùng tương tác
	+ Cùng học với các bạn
	+ Không muốn các bạn học lướt

- Học livestream:
	+ Đặt câu hỏi luôn
	+ Sắp xếp thời gian: 20h30
	+ Gián đoạn
	+ Học: ngồi ở bàn học, hai màn hình
	+ Lượng kiến thức cực nhiều, vất vả
	+ Làm bài tập đầy đủ
	+ Phần lí thuyết:
		. Buồn ngủ
		. Thuật ngữ.
	+ Thực hành:
		. Bài tập lớn
	+ Điểm danh:
		. Theo dõi tiến độ học

- Phần mềm:
	+ Code editor: sublime text 3, Visual studio code 
	+ Photoshop cs6: Phầm mềm đồ họa => Học photoshop => sử dụng => front-end
	+ Illustrator: giống cs6
	+ Back-end: 
		. Linux: lamp server
		. Window: Xamp server
	+ Git, npm, composer...

- Cố gắng
	+ HTML => CSS

------------------------------------------------------

Buổi 2: HTML

- Tạo file index.HTML
- Chạy vào file index trước trong WebSever
- Cấu trúc html
	+ Gồm các thẻ <tên thẻ>
	+ Có hai loại thẻ 
		. Thẻ mở: <tên thẻ>
		. Thẻ đóng: <tên thẻ/>
	+ Xuống dòng giống như dấu cách
	+ Nhiều dấu cách bằng 1 dấu cách

- Các loại thẻ html cơ bản:
	+ 2 loại thẻ: 
		. Thẻ nội dung:
			+ p
			+ h
			+ img
			+ a
			+ li
			+ input
			+ select
			+ button
		. Thẻ bao
			+ div
			+ header
			+ footer
			+ sidebar
			+ span
			+ ul

+ p: paragraph
+ h: heading: h1 -> h6
+ img: image
	+ src: source
+ a: href -> link
+ ul: un-order list: danh sách không sắp xếp
+ ol: order list: danh sách sắp xếp
+ form
+ input
	+ text
	+ password
	+ button
	+ checkbox
	+ radio
+ select
	+ option
+label: nhãn

+ div: xác định một vùng trên trang web
+ header: giống như thẻ div nhưng xác định phần đầu của trang web (như nhau cả)
+ footer
+ sidebar
+ span: xét về ngữ nghĩa: không có tác dụng nhưng có nghĩ trong câu văn để chỉnh sửa css về 1 từ, chữ
+ br: break : xuống dòng

=> Dùng dev tools để làm web -> inspect

- Không cần nhớ hết các thẻ: sup, sub.....

- Box model: là mô hình của 1 element (cặp thẻ html: h,a,p...): mô hình hộp
	+ Mô hình hộp:
		+ Tất cả các thành phần (element) trên trang web đều có mô hình chung: hình chữ nhật
		+ Cấu tạo của hình chữ nhật:
			. Margin: khoảng cách với element xung quanh
				. Margin-top
				. Margin-right
				. Margin-left
				. Margin-bottom
			. Border: Đường viền element
				. Border-top
				. Border-right
				. Border-left
				. Border-bottom
			. Padding: là khoảng cách giữa đường viền và thành phần con bên trong
				. Padding-top
				. Padding-right
				. Padding-left
				. Padding-bottom
			. Width: chiều rộng
			. Height: chiều cao

- Xem mô hình box model

- Mặc định khoảng không gian chiếm chỗ element = width/height + margin + border + padding.
- Bài hôm sau cực kì quan trong 

- Bài tập: Viết html của form mua hàng 
	+ Điền tên
	+ Điền địa chỉ 
	+ Điền số điện thoại
	+ Chọn giới tính
	+ Chọn vùng miền: Hà Nội, Hồ Chí Minh, Đà Nẵng
	+ Checkbox: đồng ý với điều khoản sử dụng
	+ Button mua hàng/đặt hàng

------------------------------------------------------

Buổi 3: CSS

- Selector: cách để chọn một hoặc nhiều element
	+ Chọn theo thẻ
	+ Chọn theo id: là thuộc tính của bất kì thẻ nào -> dấu #
		+ Với id thi chỉ có một (only one)
	+ Chọn theo class
		+ Cũng giống như id
		+ Được phép sử dụng nhiều 
		+ sử dụng dấu chấm
	+ Chọn thành phần con trực tiếp: >
	+ Chọn theo nhiều điều kiện: viết các điều kiện liên tiếp nhau
	+ Chọn nhiều element: dấu phẩy
	+ Chọn theo thứ tự: 
		. first-child: thành phần đầu tiên
		. last-child: thành phần cuối cùng
		. nth-child(x): thành phần thứ x
		. nth-child(odd): thành phần li lẻ
		. nth-child(even): thành phần li chẵn
		. Sử dụng tham số n (n là số tăng dần từ 0 -> +oo)
			+ nth-child(2n+1): thành phần li lẻ -> 1 3 5 7 9
			+ nth-child(2n): thành phần li chẵn -> 2 4 6 8
			+ nth-child(3n): thành phần li chia hết cho 3 -> 3 6 9
		. Chọn theo thuộc tính: sử dụng dấu [thuoctinh="giatri"] rồi css
		. Chọn 1 thành phần tiếp theo: id/class/nth-child(x) + li: phần tử tiếp
         theo tại vị trí x
		. Chọn nhiều thành phần tiếp theo (nghĩa là từ nó trở đi bị ảnh hưởng css): 
		id/class/nth-child(x) ~ li
		. wildcat selector: *: tất cả
		. :not(x/id/class/nth-child...): không phải x

=>5 thuộc tính quan trọng nhất css
- Bài hôm sau quan trọng nhất
- Luyện tập dùng css để chọn element theo ý muốn

------------------------------------------------------

Buổi 4: Năm thuộc tính quan trọng nhất của css

- Là những thuộc tính ảnh hưởng đến kích thước của element
	+ width: là chiều rộng element
		. Giá trị: px => chính xác
		. Giá trị: % => % của element cha
			+ position: fixed => % của body 

	+ height: chiều cao của element
		. Tự động dài ra theo nội dung bên trong (không đặt chiều cao)
		. Giá trị: px => chính xác
		. Giá trị: % => % của element cha

	+ padding: padding element
		. Khoảng cách giữa đường viền tới nội dung
		. Giá trị: px, %
			. Padding-top
			. Padding-right
			. Padding-left
			. Padding-bottom
		. Chỉ viết padding: x => cả 4 hướng đều là x
				   padding: x y z t => top right bottom lefy
				   padding: x y z => top (right left) bottom
				   padding:	x y => (top bottom) (right left)

	+ border: viền
		. Cách viết tắt: border: [độ dày] [kiểu đường viền] [màu];
		. Kiểu:
			+ Solid: nét liền
			+ doted: nét chấm
			+ dashed: nét gạch

		. border-top: [độ dày] [kiểu đường viền] [màu];
		. border-right: [độ dày] [kiểu đường viền] [màu];
		. border-left: [độ dày] [kiểu đường viền] [màu];
		. border-bottom: [độ dày] [kiểu đường viền] [màu];

		. border-width: độ dày
			+ border-left-width: độ dày viền trái
			+ border-right-width: độ dày viền phải
			+ border-top-width: độ dày viền trên
			+ border-bottom-width: độ dày viền dưới

		. border-style: kiểu đường viền
			+ border-left-style: kiểu viền trái
			+ border-right-style: kiểu viền phải
			+ border-top-style: kiểu viền trên
			+ border-bottom-style: kiểu viền dưới

		. border-color: màu đường viền
			+ border-left-color: màu viền trái
			+ border-right-color: màu viền phải
			+ border-top-color: màu viền trên
			+ border-bottom-color: màu viền dưới

	+ box - sizing: quy định cách mà trình duyệt tính toán kích thước element
	+ Mặc định: 
		. Content-box(mặc định):
			+ rộng = border + padding + width
			+ dài  = border + padding + height
		. Border-box:
			+ rộng = width;
			+ Dài  = height
	+ Margin: khoảng cách của element nội tại với element xung quanh
		. Giá trị: px, %
			. Margin-top
			. Margin-right
			. Margin-left
			. Margin-bottom
		. Chỉ viết Margin: x => cả 4 hướng đều là x
				   Margin: x y z t => top right bottom lefy
				   Margin: x y z => top (right left) bottom
				   Margin:	x y => (top bottom) (right left)

=> Tổng kết lại: margin, padding, width, height, box-sizing, border;

- Display: block và inline:
	+ Tất cả các thẻ html chia làm hai loại:
		. Block element:
			+ Là element mặc định rộng 100%
			+ Nằm trên 1 hàng riêng
			+ Block element dùng để chưa block hoặc inline element khác
			+ Thẻ block: div, h, p, ul, ol, li, header, footer, sidebar...
			+ Có thể xác định width, height cho nó

		. Inline element
			+ Là element mặc định rộng bằng nội dung của nó
			+ Inline element chỉ chứa được inline element
			+ Inline element nằm trên cùng 1 hàng => muốn xuống dòng thì set block hoặc nằm trong block
			+ Thẻ Inline: a, span, label, input, button, select
			+ Riêng thẻ img có trình duyệt hiểu là block, có trình duyệt hiểu là inline => định nghĩa lại là block hay inline, có lúc là block có lúc là inline
			+ Không thể xác định width và height

		. Inline-block: Hiển thị trên 1 dòng như inline nhưng có thể đặt width và height cho nó

=> Luyện tập
	+ Sắp xếp các element
	+ Thử code để hiểu về block và inline
	+ Học thuộc những thẻ nào là block và thẻ nào là inline

------------------------------------------------------

Buổi 5: Float

- Tất cả thành phần trên trạng web có xu hướng chạy lên phía trên 
	+ Nếu là thành phần inline thì chạy sang bên trái

- Float: là một thuộc tính định nghĩa cho element trôi về phía nào
	+ Khi float làm thế nào để không bị xuống dòng?
		. Đặt phần trăm
		. Sử dụng fix 1 bên. Ví dụ (calc(100% - 300px)) => 1 bên luôn fix, 1 bên di chuyển theo %

- Basic layout
	+ 2 cột
	+ 3 cột

- Clear:
	+ xóa sự ảnh hưởng của các thành phần phía trước
	+ left
	+ right
	+ both: cả hai left và right

- Khi một thành phần con float thì thành phần cha không thể tính toán được chiều cao

- Rest css: Mỗi trình duyệt có những thuộc tính mẵ định khác nhau
		* {
		    padding: 0px;
	=>	    margin: 0px;
		    box-sizing: border-box;
		}

=> Dựng layout những trang web đã có 

=> Bài tập: làm 1 layout trang web mà ban thích

------------------------------------------------------

Buổi 6: Chữa bài tập: làm 1 layout trang web mà ban thích (Mình làm trang fap.fpt.edu.vn)

------------------------------------------------------

Buổi 7: flex-box

- Không chắc chắn chạy 100% trên các trình duyệt
- Flex là mô hình dàn trang phổ biến ở trên mobile app: Android, IOS
- Học js, vueJs (react), reac native (mobile)
- flex ->
    + Để sử dụng flex thì ta dùng display: flex; cho cha
    + flex-grow: định nghĩa việc lớn lên của flex-item
    + Là tỉ lệ phân chia phần thừa còn lại của cha
    + Theo trục main
- flex shrink: Ngược lại với flex-grow
    + Là tỉ lệ phân chia phần thiếu khi cha thiếu
- flex có hai trục là main axist:x và cross axist:y
- justify-content: (nằm trong class cha theo chiều ngang main axist:x)
    + flex-end: vị trí ở cuối trục main
    + flex-start: vị trí ở đầu trục main
    + center: giữa trục main
    + space-between: khoảng trống giữa các item có khoảng cách được chia bằng nhau và sát lề
    + space-around: Khoảng trống xung quanh các item bằng nhau và cách khoảng lề bằng nhau
    + space-evenly: khoảng trống chia đều cách lề
- align-items: (nằm trong class cha theo chiều dọc cross axist:y)
    + flex-start: về đầu tiên (cao xuống dưới)
    + flex-end: về cuối cùng (cao lên trên)
    + center: nằm giữa theo trục cross (cao 2 bên)
- flex-direction: định nghĩa xem là column hay row
    + colum: cột -> trục main: 1 cột có nhiều hàng
    + column-reverse -> đảo ngược của column
    + row: hàng -> trục cross: 1 hàng có nhiều cột
    + row-reverse -> đảo ngược của row	
    -> có column thì luôn là main nên sử dụng được justify-content 
    và những thuộc tính liên quan tới trục main
    -> có row thì ngược lại
    -> Khi thay đổi flex-direction: column; thì trục main 
    thành trục cross, trục cross thành trục main 
- flex-basis:
    + Là kích thước của element-item theo trục main
    + Là width khi trục ma in ngang, là height khi trục main dọc

- flex-wrap: Khi bị quá chiều rộng thì xuống dòng

=> Bài tập: 
    + Dựng lại giao diện giống bài tập trước nhưng sử dụng flex
    thay vì float (buổi trước là buổi 6)

------------------------------------------------------

Buổi 8: Font

- Text-style:

- Font: 
	+ Hiểu về font chữ: font chữ trên máy tính là bộ các chữ cái xếp liền kề nhau
	+ Font chữ trên máy tính là bộ hình ảnh xếp liền kề nhau
	+ Windows: C:/Windows/fonts
	+ Linux: /usr/shares/fonts
	+ Đuôi file font: ttf, eof
	+ font-size: kích thước
	+ line: dòng chữ xếp sát nhau
		. Line-height: chiều cao dòng chữ và các chữ cái được căn vào giữa dòng theo chiều dọc
	+ Tạo menu thẻ a thì nên để cái line-height = height
	+ Khi đặt height = line-height thì text sẽ được căn giữa chiều dọc
	+ letter-spacing: Khoảng cách giữa các chữ cái
	+ word-spacing: Khoảng cách giữa các từ
	+ word-break: break-all;/word-wrap: break-word;: Nếu chữ dài quá width thì xuống dòng như kiểu
	để tránh vỡ giao diện khi người dùng đặt email quá dài thì ta nên đặt
	+ font-family: Định nghĩa các font:
		. Danh sách các font được phân cách bằng dấu phẩy
		. Các tên font có dấu cách được bao bọc bằng dấu: " "
		. Sans-serif: font mặc định 
	+ @font-face: định nghĩa ra 1 cái font
	+ Có hai loại font
		. font có sẵn: có sẵn trên máy người dùng
			+ Không phải tải thêm
			+ Tốc độ nhanh
			+ Nhược điểm: chưa chắc người dùng đã có (còn tùy theo hệ điều hành)
			+ Dùng với trang web cần tốc độ, đọc thông tin
		. Web font
			+ Là những font trên trang web khi người dùng xem thì font chữ được tải về
			+ Ưu điểm: hiển thị được tất care cả font, không yêu cầu người dùng có font đó 
			+ Nhược điểm: tốn thời gian tải font
	+ Icon font: trên fontawesome

- Phân biệt div bọc div và ul bọc li:
	+ div bọc div thì bao bọc một cái gì đấy không nhất thiết phải cùng kiểu
	+ ul bọc li là dùng cho 1 danh sách cùng 1 kiểu: danh sách sản phẩm...

	=> Ôn tập về font

------------------------------------------------------

Buổi 9: position/background

- position là một thuộc tính vị trí của element
	+ fixed: Nằm chính xác tuyệt đối với body
		. Phải đặt vị trí top left right bottom cho nó
		. Nằm lên phía trên của các element khác
		. Chiều rộng của element phụ thuộc vào cái nội dung bên trong của element
	+ Sticky: nằm bình thường, nếu như scroll cuộc chuột nên
	=> không thể cuộn được nữa
		. Nằm phía trên các element khác
		. Phải đặt top
	+ Mặc định: static
	+ Relative: Vị trí liên quan
	+ Absolute: Tuyệt đối so với thành phần chứa nó có giá trị position: relative
	+ Cặp relative và absolute

- background
	+ Nền của 1 element
	+ Background-color: màu nền
	+ Background-image: url() hình nền
	+ Background-repeat: lặp lại
		. no-repeat: không lặp
		. repeat: lặp lại
		. repeat-x: lặp lại theo chiều ngang
		. repeat-y: lặp lại theo chiều dọc
	+ Background-position: 
		. Vị tri của hình nền
		. left(px) top(px)
		. left/right top/bottom
		. right/left/top/bottom center
		. right/left px top/bottom px
	+ Background-size: 
		. Kích thước ảnh nền
		. Cover: Zoom ra sao cho full cả hai chiều của element (full được 1 chiều nếu còn chỗ trống thì full tiếp)
		. Contain: Zoom ra sao cho full 1 chiều element (full được 1 chiều thì dừng)
		. auto: giá trị mặc định
		. Kích thước rộng kích thước cao
	+ Background attachment
		. fixed: khi element scroll(lăn chuột): đứng im theo body
		. scroll: mặc định
		. local: scroll theo cái element hiện tại
		. overflow: scroll; khi nội dung dài quá thanh element thì sẽ tạo thanh scroll
	+ Cách viết tắt 
		. background: [màu] [ảnh nền url()] [repeat] [position]
	+ Multiple background: kết hợp lồng url, position, size
=> Demo {
	#box {
    /* width: 500px; */
    height: 350px;
    border: 1px solid black;
    margin: 20px auto;
    background-color: #B3E2ED;
    background-image: url(./3d.png), url(./team0.png);
    background-repeat: no-repeat;
    background-position: left top;
    background-size: auto, cover;
    /* background-attachment: local;
    overflow: scroll;
    background:#B3E2ED url(./3d.png) no-repeat left top; */
	}
}

------------------------------------------------------

Buổi 10: State

- Các element trên sang web đều có state
	+ Hover: Khi người dùng di chuột lên element: có tất cả ở các element
	+ Active: Khi nhấn chuột vào thì sẽ có trạng thái Active
	+ Visited(thẻ a): Link bạn đã xem (sau khi ấn vào xem xong thì biến đổi...)
	+ Link(thẻ a): trang thái ban đầu
	+ Focus: element hiện tại (thao tác trên bàn phím ấn nút tab -> thay đổi -> thay active) (1 lúc chỉ có 1 element nhận trạng thái active)
	
- Dropdown menu
- Pseudo element
	+ Cũng là element như các thẻ khác
	+ Do css thêm vào
	+ Có hai cái trong pseudo:
		. Before: phía trước
		. After: phía sau
	+ Float + clear -> clear-fix
- Bài tập
	+ Drop-out menu
	+ Fly-out menu
	+ Tooltit

------------------------------------------------------

Buổi 11: Các thuộc tính css

- Text-align: thuộc tính căn Chữ, ảnh hưởng đến text và tất cả các inline element trong nó
	+ left: căn trái
	+ right: căn Phải
	+ center: căn giữa
	+ justify: căn đều hai bên

- Text-decoration: trang trí gạch dưới gạch ngang cho chữ

- Text-indent: px: Căn lề vào  khoảng bao nhiêu (để biến mất chữ hay dấu chữ - text-indext: -1000000) - các thẻ phải có thông tin bên trong để google đánh giá cao mà tại lai muốn thêm img thì ta sẽ để biến mất chữ.

- overflow: thành phần còn, thông tin bị quá chiều rộng, chòi ra bên ngoài 
	+ overflow: cả hai chiều
	+ overflow-x: quá chiều ngang
	+ overflow-y: quá chiều dọc
	+ scroll: Tạo thanh cuộn khi quá chiều rộng
	+ hidden: ẩn đi thành phần con

- Opacity: Độ trong suốt của element (value: 0 -> 1): mờ toàn bộ các element có trong element

- Color: Màu chữ
	+ Màu trong Web:
		. Màu tiếng anh: red, blue, purple, orange.
		. Mã màu RGB (red, green, blue): #3a3a3a
			. #ff0000: red
			. #00ff00: green
			. #0000ff: blue
			. #000000: black
			. #ffffff: white
		. Mã màu RGBA (red, green, blue, alpha) (alpha: màu trong suốt: 0 -> 1)
			. rgba(111, 112, 113, 0.6)

- List-style: kiểu kí hiệu first của thẻ li

- Border-collapse: collapse (table): gộp border của td và table là 1 bảng hoàn hảo (có thẻ reset trước trong table) 

- Radius: bo tròn element
	+ Radius: x; -> 4 góc
	+ Radius: x y; -> (trái trên - phải dưới) (phải trên - trái dưới)
	+ Radius: x y z t -> 4 góc lần lượt từ trái trên đi vòng

- Shadow: bóng đổ
	+ box-shadow: bóng đổ của box
		. box-shadown: (bên trái(-)/phải(+)) (trên(-)/dưới(+)) (độ lan tỏa(càng lớn càng mờ)) (màu sắc)
	+ text-shadow: bóng đổ của text

- Desgin button: nếu hover lên mà thấy thêm 1 border thì để border first là transparent rồi hover border để không bị ảnh hưởng các thành phần phía sau do elemnt lớn lên

------------------------------------------------------

Buổi 12: Thiết kế các mẫu bằng html/css

- Slider
- Tab 
- Checkbox
- switch box
- input
- List group
- Menu
-> Dựa theo element cơ bản để tạo ra các element phức tạp
	+ switch iphone
		. Dùng checkbox
		. Nếu input nằm trong label thì tích được vào chữ
	+ tab
		. Dùng radio
		. Nếu input nằm trong label thì tích được vào chữ
	-> Cứ bao bằng label thì radio hay checkbox sẽ luôn luôn hoạt động 

- Media query 
	+ CSS selector theo thiết bị
	+ Thiết kế web responsive
	+ Break point (điểm phá vỡ)
	+ Màn hình rất lớn > 1200px
	+ Màn hình desktop bình thường: 960px
	+ Màn hình mobile: 768px
	+ Màn hình rất nhỏ dưới 500px
	+ Cú pháp: @media [loại màn hình] and [điều kiện] 

	+ Có hai cách viết 
		. Mobile first: max-width (tăng dần)
		. Desktop first: min-width (giảm dần)

	+ max-width: rộng tối đa, min-width: nhỏ tối đa

- Bài tập: 
	+ Làm lại tất cả những gì được học và tìm kiếm làm thêm 

------------------------------------------------------

Buổi 13: Hình ảnh trên trang web

- Các loại ảnh trên trang web
	+ .bmp: fie bitmap
		. Ảnh là một loạt các pixel xếp theo hàng ngang và hàng dọc(cực kì ít dùng) 
		. Đặc điểm có thể hiện các ảnh có ít màu hơn(8 bit image - thể hiện được 256 màu)
		. Tăng hoặc giảm số bit màu => giảm dung lượng 
		. Ít phổ biến
	+ .jpg: file ảnh nét
		. Giống bitmap nhưng lại có hệ số nén cao thích hơn ảnh phong cảnh, ảnh chụp, ảnh hỗ độn màu
		. Không hỗ trợ ảnh trong suốt
	+ .png: ảnh portable
		. Hệ số nén cao nếu có các vùng màu đồng đều
		. Ảnh png hỗ trợ trong suốt

	+ .gif: ảnh động gif
		. Giống như bitmap thể hiện ảnh ít màu hơn 
		. Hỗ trợ trong suốt
		. Hỗ trợ animation
	+ .webp
		. Ảnh chuẩn của google
	+ .svg: dạng ảnh vector: 
		. Ảnh hình toán học: ảnh của 1 hình tròn màu đỏ(bán kính, tọa độ tâm, màu hình tròn)
		. Lưu dưới dạng toán học
		. Sử dụng lưu: icon
		. Không chắc 100% trình duyệt hỗ trợ
	+ Kết luận
		. Có vùng màu đồng đều nên lưu dưới dạng png
		. Có vùng màu hỗ độn thì lưu dưới dạng jpg
		. 1 ảnh lưu thông tin của 1 pixel thì cần 3 màu RGB
		. RGBA lưu ảnh trong suốt sẽ tốn bộ nhớ hơn
		. Phổ biến nhất trên web là jpg và png
	
- Style cho img: 
	+ Mặc định img là thẻ inline-block
	+ Các trình duyệt hiểu thẻ img 1 cách khác nhau 
	+ Nên đặt thuộc tính display cho thẻ img
	+ Đường dẫn tuyệt đối và đường dẫn tương đối (relative path and absolute path)
	+ Đặt đường dẫn sai 
	+ Tên file
		. Chữ cái latin ==> không dấu
		. _ - .....
		. Đuôi file chữ hoa, đuôi file chữ thường => Không đảm bảo
		. Tên file không được chứa dấu cách (%20) => url encode 
		. Trên linux hoặc macOs chữ hoa và chữ thường khác nhau, trên window chữ hoa và chữ thường giống nhau => chuyển thành chữ thường hết
	Đường dẫn tuyệt đối C:/project/anh/1.png => sử dụng đường dẫn tương đối: từ thư mục hiện tại đi vào các thư mục con
		. ../: lên 1 cấp thư mục
		. ./: ở cấp thư mục hiện tại
		. ../../: lên 2 thư mục

- Đường dẫn tuyệt đối trên web:
	+ http://laptrinhcuocsong.com
	+ https://buivannguyen.com/images/buivannguyen.png : trên web chỉ có 1 đường dẫn như vậy
- Đường dẫn base url: là đường dẫn gốc + đường dẫn con
